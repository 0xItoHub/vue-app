# .github/workflows/pages.yml
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]          # main へ push で実行

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) ソース取得
      - uses: actions/checkout@v4

      # 2) Node セットアップ
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # ↓ lock ファイルをコミットしているならキャッシュを有効化できる
          # cache: npm
          # cache-dependency-path: package-lock.json

      # 3) 依存インストール
      - name: Install dependencies
        run: npm ci

      # 4) Tailwind 依存確認（任意）
      - name: Check Tailwind dependencies
        run: npm ls tailwindcss @tailwindcss/postcss

      # 5) ビルド
      - name: Build
        run: npm run build          # → dist/ が生成

      # 6) ★ デバッグ：埋め込まれたアセットパスを 10 行だけ出力
      - name: Show asset paths (debug)
        run: |
          grep -Eo 'href="[^"]+\.css"|src="[^"]+\.js"' dist/index.html | head

      # 6-A) 生成 CSS ファイルのサイズを表示
      - name: Show CSS size (debug)
        run: ls -lh dist/assets | grep '\.css$'

      # 6-B) Tailwind 代表クラスを 3 つだけ grep
      - name: Check Tailwind classes (debug)
        run: |
          grep -q 'bg-green-500' dist/assets/*.css && echo '✅ bg-green-500 found'
          grep -q 'text-4xl'     dist/assets/*.css && echo '✅ text-4xl found'
          grep -q 'container'     dist/assets/*.css && echo '✅ container found'


      # 7) dist を Pages 用アーティファクトとしてアップロード
      - name: Upload dist
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist                # ルート直下の dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
